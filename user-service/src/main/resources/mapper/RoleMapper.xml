<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="litmall.userservice.mapper.RoleMapper">

    <resultMap id="mallRoleMap" type="mallRole">
        <id property="id" column="id"/>
        <result property="beDeleted" column="is_deleted" javaType="Boolean"/>
    </resultMap>
    <resultMap id="mallAdminForRoleMap" type="mallAdmin">
        <id property="id" column="id"/>
        <result property="beDeleted" column="is_deleted" javaType="Boolean"/>
    </resultMap>
    <resultMap id="mallPrivilegeForRoleMap" type="mallPrivilege">
        <id column="id" property="id"/>
        <result column="is_deleted" property="beDeleted" javaType="Boolean" />
    </resultMap>

    <insert id="insert" parameterType="mallRole" useGeneratedKeys="true" keyProperty="id">
        insert into litmall_role(name, gmt_create, gmt_modified, is_deleted)
        values (#{name}, sysdate(), sysdate(), 0)
    </insert>

    <update id="deleteById" parameterType="Integer">
        update litmall_role
        set is_deleted = 1, gmt_modified = sysdate()
        where id = #{id} and is_deleted = 0
    </update>

    <update id="update" parameterType="mallRole">
        update litmall_role set
            <trim suffixOverrides=",">
                gmt_modified = sysdate(),
                <if test="name != null">
                    name = #{name},
                </if>
                <choose>
                    <when test="beDeleted == null"/>
                    <when test="beDeleted == true">
                        is_deleted = 1,
                    </when>
                    <otherwise>
                        is_deleted = 0,
                    </otherwise>
                </choose>
            </trim>
        where id = #{id} and is_deleted = 0
    </update>

    <select id="findById" parameterType="Integer" resultMap="mallRoleMap">
        select id, name, gmt_create, gmt_modified, is_deleted
        from litmall_role
        where id = #{id} and is_deleted = 0
    </select>

    <select id="findRoles" resultMap="mallRoleMap">
        select id, name, gmt_create, gmt_modified, is_deleted
        from litmall_role
        where is_deleted = 0
        limit ${limit * page - limit}, ${limit * page}
    </select>

    <select id="findAdmins" parameterType="Integer" resultMap="mallAdminForRoleMap">
        select id, gmt_create, gmt_modified, username, password, role_id, is_deleted
        from litmall_admin
        where role_id = #{id} and is_deleted = 0
    </select>

    <select id="getAllRoles" resultMap="mallRoleMap">
        select id, name, gmt_create, gmt_modified, is_deleted
        from litmall_role
        where is_deleted = 0
    </select>

    <select id="getPrivilegesByRoleId" parameterType="Integer" resultMap="mallPrivilegeForRoleMap">
        select id, role_id, url, method, gmt_create, gmt_modified, is_deleted
        from litmall_privilege
        where role_id = #{id} and is_deleted = 0
    </select>

    <update id="deletePrivilegesByRoleId" parameterType="Integer">
        update litmall_privilege
        set is_deleted = 1, gmt_modified = sysdate()
        where role_id = #{id} and is_deleted = 0
    </update>

    <update id="deleteAdminsByRoleId" parameterType="Integer">
        update litmall_admin
        set is_deleted = 1, gmt_modified = sysdate()
        where role_id = #{id} and is_deleted = 0
    </update>

    <select id="findByName" parameterType="String" resultMap="mallRoleMap">
        select id, name, gmt_create, gmt_modified, is_deleted
        from litmall_role
        where is_deleted = 0 and name = #{name}
    </select>
</mapper>